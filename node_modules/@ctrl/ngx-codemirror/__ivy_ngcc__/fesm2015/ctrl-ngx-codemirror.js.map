{"version":3,"file":"ctrl-ngx-codemirror.js","sources":["../../src/lib/codemirror.component.ts","../../src/lib/codemirror.module.ts","../../src/lib/ctrl-ngx-codemirror.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  KeyValueDiffer,\n  KeyValueDiffers,\n  NgZone,\n  OnDestroy,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Editor, EditorChange, EditorFromTextArea, ScrollInfo } from 'codemirror';\n\nfunction normalizeLineEndings(str: string): string {\n  if (!str) {\n    return str;\n  }\n  return str.replace(/\\r\\n|\\r/g, '\\n');\n}\n\ndeclare var require: any;\ndeclare var CodeMirror: any;\n\n@Component({\n  selector: 'ngx-codemirror',\n  template: `\n    <textarea\n      [name]=\"name\"\n      class=\"ngx-codemirror {{ className }}\"\n      [class.ngx-codemirror--focused]=\"isFocused\"\n      autocomplete=\"off\"\n      [autofocus]=\"autoFocus\"\n      #ref\n    >\n    </textarea>\n  `,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => CodemirrorComponent),\n      multi: true,\n    },\n  ],\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CodemirrorComponent\n  implements AfterViewInit, OnDestroy, ControlValueAccessor, DoCheck\n{\n  /* class applied to the created textarea */\n  @Input() className = '';\n  /* name applied to the created textarea */\n  @Input() name = 'codemirror';\n  /* autofocus setting applied to the created textarea */\n  @Input() autoFocus = false;\n  /**\n   * set options for codemirror\n   * @link http://codemirror.net/doc/manual.html#config\n   */\n  @Input()\n  set options(value: { [key: string]: any }) {\n    this._options = value;\n    if (!this._differ && value) {\n      this._differ = this._differs.find(value).create();\n    }\n  }\n  /* preserve previous scroll position after updating value */\n  @Input() preserveScrollPosition = false;\n  /* called when the text cursor is moved */\n  @Output() cursorActivity = new EventEmitter<Editor>();\n  /* called when the editor is focused or loses focus */\n  @Output() focusChange = new EventEmitter<boolean>();\n  /* called when the editor is scrolled */\n  // eslint-disable-next-line @angular-eslint/no-output-native\n  @Output() scroll = new EventEmitter<ScrollInfo>();\n  /* called when file(s) are dropped */\n  // eslint-disable-next-line @angular-eslint/no-output-native\n  @Output() drop = new EventEmitter<[Editor, DragEvent]>();\n  @ViewChild('ref') ref!: ElementRef<HTMLTextAreaElement>;\n  value = '';\n  disabled = false;\n  isFocused = false;\n  codeMirror?: EditorFromTextArea;\n  /**\n   * either global variable or required library\n   */\n  private _codeMirror: any;\n\n  private _differ?: KeyValueDiffer<string, any>;\n  private _options: any;\n\n  constructor(private _differs: KeyValueDiffers, private _ngZone: NgZone) {}\n\n  get codeMirrorGlobal(): any {\n    if (this._codeMirror) {\n      return this._codeMirror;\n    }\n\n    // in order to allow for universal rendering, we import Codemirror runtime with `require` to prevent node errors\n    this._codeMirror = typeof CodeMirror !== 'undefined' ? CodeMirror : require('codemirror');\n    return this._codeMirror;\n  }\n\n  ngAfterViewInit() {\n    this._ngZone.runOutsideAngular(() => {\n      this.codeMirror = this.codeMirrorGlobal.fromTextArea(\n        this.ref.nativeElement,\n        this._options,\n      ) as EditorFromTextArea;\n      this.codeMirror.on('cursorActivity', cm => this._ngZone.run(() => this.cursorActive(cm)));\n      this.codeMirror.on('scroll', this.scrollChanged.bind(this));\n      this.codeMirror.on('blur', () => this._ngZone.run(() => this.focusChanged(false)));\n      this.codeMirror.on('focus', () => this._ngZone.run(() => this.focusChanged(true)));\n      this.codeMirror.on('change', (cm, change) =>\n        this._ngZone.run(() => this.codemirrorValueChanged(cm, change)),\n      );\n      this.codeMirror.on('drop', (cm, e) => {\n        this._ngZone.run(() => this.dropFiles(cm, e));\n      });\n      this.codeMirror.setValue(this.value);\n    });\n  }\n  ngDoCheck() {\n    if (!this._differ) {\n      return;\n    }\n    // check options have not changed\n    const changes = this._differ.diff(this._options);\n    if (changes) {\n      changes.forEachChangedItem(option =>\n        this.setOptionIfChanged(option.key, option.currentValue),\n      );\n      changes.forEachAddedItem(option => this.setOptionIfChanged(option.key, option.currentValue));\n      changes.forEachRemovedItem(option =>\n        this.setOptionIfChanged(option.key, option.currentValue),\n      );\n    }\n  }\n  ngOnDestroy() {\n    // is there a lighter-weight way to remove the cm instance?\n    if (this.codeMirror) {\n      this.codeMirror.toTextArea();\n    }\n  }\n  codemirrorValueChanged(cm: Editor, change: EditorChange) {\n    const cmVal = cm.getValue();\n    if (this.value !== cmVal) {\n      this.value = cmVal;\n      this.onChange(this.value);\n    }\n  }\n  setOptionIfChanged(optionName: string, newValue: any) {\n    if (!this.codeMirror) {\n      return;\n    }\n\n    // cast to any to handle strictly typed option names\n    // could possibly import settings strings available in the future\n    this.codeMirror.setOption(optionName as any, newValue);\n  }\n  focusChanged(focused: boolean) {\n    this.onTouched();\n    this.isFocused = focused;\n    this.focusChange.emit(focused);\n  }\n  scrollChanged(cm: Editor) {\n    this.scroll.emit(cm.getScrollInfo());\n  }\n  cursorActive(cm: Editor) {\n    this.cursorActivity.emit(cm);\n  }\n  dropFiles(cm: Editor, e: DragEvent) {\n    this.drop.emit([cm, e]);\n  }\n  /** Implemented as part of ControlValueAccessor. */\n  writeValue(value: string) {\n    if (value === null || value === undefined) {\n      return;\n    }\n    if (!this.codeMirror) {\n      this.value = value;\n      return;\n    }\n    const cur = this.codeMirror.getValue();\n    if (value !== cur && normalizeLineEndings(cur) !== normalizeLineEndings(value)) {\n      this.value = value;\n      if (this.preserveScrollPosition) {\n        const prevScrollPosition = this.codeMirror.getScrollInfo();\n        this.codeMirror.setValue(this.value);\n        this.codeMirror.scrollTo(prevScrollPosition.left, prevScrollPosition.top);\n      } else {\n        this.codeMirror.setValue(this.value);\n      }\n    }\n  }\n\n  /** Implemented as part of ControlValueAccessor. */\n  registerOnChange(fn: (value: string) => void) {\n    this.onChange = fn;\n  }\n  /** Implemented as part of ControlValueAccessor. */\n  registerOnTouched(fn: () => void) {\n    this.onTouched = fn;\n  }\n  /** Implemented as part of ControlValueAccessor. */\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n    this.setOptionIfChanged('readOnly', this.disabled);\n  }\n  /** Implemented as part of ControlValueAccessor. */\n  private onChange = (_: any) => {};\n  /** Implemented as part of ControlValueAccessor. */\n  private onTouched = () => {};\n}\n","import { NgModule } from '@angular/core';\n\nimport { CodemirrorComponent } from './codemirror.component';\n\n@NgModule({\n  exports: [CodemirrorComponent],\n  declarations: [CodemirrorComponent],\n})\nexport class CodemirrorModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}